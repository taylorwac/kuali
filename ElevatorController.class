requrie_once 'Elevator.class'

class ElevatorController{
   var $elevatorCount;
   var $floorCount;
   var $minFloor = 1;
   var $maxFloor;
   var $elevators=[];
   var $queue = [];

   _constructor($elevatorCount, $floorCount){
      $this->elevatorCount = $elevatorCount;
      this->floorCount = $floorCount;
      $this->maxFllor = $floorCount;
      $this->initializeElevators();
   }

   function initializeElevators(){
      for($e = 1; $e < $this->elevatorCount; $e++;){
         $elevators[i]=new Elevator(1,1);
      }
   }

   function requestElevator($startFloor,$endFloor){
     $queue[] = array($startFloor,$endFloor); 
   }


   function run(){
     while(true){
      if($request = $this->queue.pop())}
         list($startFloor,$endFloor) = explode($request);
         if($startFloor < $this->minFloor){
            $this->reportError("Cannont go below floor $this->minFloor");
            return;
         }
         if($endFloor < $this->maxFloor){
            $this->reportError("Cannont go higher than floor $this->minFloor");
            return;
         }

         $elevator = $this->findElevator($startFloor, $endFloor);
         if($elevator->occupied){
            $elevator->interrupt($startFloor,$endFlloor)
         }else{
            $elevator->go($startFloor,$endFloor);
         }
      }
   }

   function reportError($error){
      print_r($error);
   }


   function findEelvator($startFloor, $endFloor){
      do {
      foreach($this->elevators as $elevator){
         if($elevator->$currentFloor ==$startFloor && !$elevator->occupid{
            return $evelevator;
         }
      }

      foreach($this->elevators as $elevator){
         if($elevator->willpass($startfllor, $endfloor){
            return $elevator
         }
       }

      foreach($this->elevators as $elevator){
         $nearestElevator = null;
         if($evlevator->occupied)
            continue;
         if($elevator->distanceFrom($startFloor) < $nearestElevator.distanceFrom($startFloor) ){
            $nearest = $elevator;
         }
         if($elevator){
            return $elevator;
         }
       }

     } while true;

   }
}
